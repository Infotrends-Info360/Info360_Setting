<?xml version="1.0" encoding="UTF-8"?>
<!--

       Copyright 2009-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="PersonTableBeans">
  <resultMap type="com.infotrends.bean.PersonTableBeans" id="PersonTableBeansResult">
  
      <result column="ACCOUNT" 				jdbcType="VARCHAR" property="account"/>
      <result column="DBID" 		 		jdbcType="INTEGER" property="dbid"/>
      <result column="FIRSTNAME" 	    	jdbcType="VARCHAR" property="first_name"/>
      <result column="LASTNAME" 		 	jdbcType="VARCHAR" property="last_name"/>
      <result column="MAX_COUNT"  	 		jdbcType="INTEGER" property="max_count"/>
      <result column="USER_NAME" 			jdbcType="VARCHAR" property="user_name"/>
      <result column="EMAILADDRESS"     	jdbcType="VARCHAR" property="emailaddress"/>
      <result column="PASSWORD"     		jdbcType="VARCHAR" property="password"/>
      <result column="EMPLOYEE_ID"        	jdbcType="VARCHAR" property="employee_id"/>
      <result column="STATE" 		 		jdbcType="VARCHAR" property="state"/>
      <result column="DN" 	 	 			jdbcType="INTEGER" property="dn"/>
      <result column="GROUPNAME" 	 		jdbcType="VARCHAR" property="groupname"/>
      <result column="GROUPS"          		jdbcType="VARCHAR" property="groupdbid"/>
      
      <result column="notgroupname" 	 	jdbcType="VARCHAR" property="notgroupname"/>
      <result column="notgroupdbid"         jdbcType="VARCHAR" property="notgroupdbid"/>
      
  </resultMap>
 
  <select id="Query_PersonTableBeans_STATE" parameterType="com.infotrends.bean.PersonTableBeans"  resultMap="PersonTableBeansResult">
<![CDATA[SELECT distinct
 a1.ACCOUNT,a1.DBID,a1.FIRSTNAME,a1.LASTNAME,a1.MAX_COUNT,a1.USER_NAME,a1.PASSWORD,a1.EMAILADDRESS,a1.EMPLOYEE_ID,a1.STATE,a1.DN,
  
  ISNULL(b1_end_end.GROUPNAME, '') AS GROUPNAME,
  ISNULL( b1_end_end.GROUPS, '') AS GROUPS
	FROM 
	(select  a.*
		from tblCfg_Person a ,tblCfg_Group_Person b 
		
		where ]]>
		<if test="state==0">
		a.STATE='0' or a.STATE='1' and	 
		</if>
		<if test="state==1">
		a.STATE='2'and	
		</if>
		a.DBID=b.PERSON_DBID)a1
LEFT JOIN
		(SELECT distinct e_PERSON_DBID ,left(b1_end.GROUPNAME,len(b1_end.GROUPNAME)-1) AS GROUPNAME, left(b1_end.GROUPS,len(b1_end.GROUPS)-1) as GROUPS
		FROM
			(SELECT e.GROUPNAME, e_PERSON_DBID, f.GROUPS
			 FROM 

				(SELECT distinct PERSON_DBID AS e_PERSON_DBID,
						(SELECT cast(c1_2.NAME AS NVARCHAR ) + ',' 
						 FROM (SELECT c.PERSON_DBID, d.NAME, d.DBID
								FROM tblCfg_Group_Person c, tblCfg_Group d
								WHERE c.GROUP_DBID =d.dbid and d.STATE='0') c1_2
						 WHERE c1_2.PERSON_DBID = c1_1.PERSON_DBID
						 FOR XML PATH('')
						) as GROUPNAME
				FROM(SELECT c.PERSON_DBID, d.NAME
					FROM tblCfg_Group_Person c, tblCfg_Group d
					WHERE c.GROUP_DBID =d.dbid) c1_1) e,


				(SELECT distinct PERSON_DBID AS f_PERSON_DBID, 
					(SELECT cast(c2_2.DBID AS NVARCHAR ) + ',' 
					 FROM (SELECT c.PERSON_DBID,d.DBID
						   FROM tblCfg_Group_Person c, tblCfg_Group d
						   WHERE  c.GROUP_DBID =d.dbid and d.STATE='0') c2_2
					 WHERE c2_2.PERSON_DBID = c2_1.PERSON_DBID
					FOR XML PATH('')
					) as GROUPS
				FROM (SELECT c.PERSON_DBID,d.DBID
					   FROM tblCfg_Group_Person c, tblCfg_Group d
					   WHERE  c.GROUP_DBID =d.dbid and d.STATE='0') c2_1)f

					   where e_PERSON_DBID=f_PERSON_DBID
			) b1_end
			) b1_end_end
ON a1.DBID =  b1_end_end.e_PERSON_DBID

  </select>
  

 
  
</mapper>
